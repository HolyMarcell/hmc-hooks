export declare const assoc: (key: any, value: any, object: any) => any;
export declare const path: (...args: any[]) => any;
export declare const pathOr: (...args: any[]) => any;
export declare const isNil: (...args: any[]) => any;
export declare const assocPath: (...args: any[]) => any;
export declare const dissocPath: (...args: any[]) => any;
export declare const dissoc: (...args: any[]) => any;
export declare const prop: (...args: any[]) => any;
export declare const pick: (list: string[], from: any) => any;
export declare const merge: (...args: any[]) => any;
export declare const propOr: (...args: any[]) => any;
export declare const is: (...args: any[]) => any;
export declare const last: (...args: any[]) => any;
export declare const reject: (...args: any[]) => any;
export declare const has: (...args: any[]) => any;
export declare const hasPath: (...args: any[]) => any;
export declare const isEmpty: (...args: any[]) => any;
export declare const keys: (...args: any[]) => any;
export declare const mergeDeepRight: (...args: any[]) => any;
export declare const equals: (...args: any[]) => any;
export declare const flatten: (...args: any[]) => any;
export declare const startsWith: (search: string | any[], collection: string | any[]) => any;
export declare const splitAt: (...args: any[]) => any;
export declare const contains: (...args: any[]) => any;
export declare const find: (...args: any[]) => any;
export declare const propEq: (...args: any[]) => any;
export declare const intersection: (...args: any[]) => any;
export declare const filter: (predicate: Function, filterable: any) => any;
